name: Benchmark a PR

on:
  pull_request:

defaults:
  run:
    working-directory: packages/sync-service

env:
  PROJECT_ID: vaxine
  REGISTRY: europe-docker.pkg.dev/vaxine/electric
  ISSUE_NUMBER: ${{ github.event.pull_request.number }}

jobs:
  build:
    permissions:
      pull-requests: write
      contents: read
    name: Build image and run benchmarks on PR comment
    #if: ${{ github.event.issue.pull_request && (github.event.comment.author_association == 'MEMBER' || github.event.comment.author_association == 'OWNER' || github.event.comment.author_association == 'CONTRIBUTOR') && (startsWith(github.event.comment.body, 'benchmark this') || startsWith(github.event.comment.body, 'Benchmark this'))}}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v7
        id: get-pr
        with:
          script: |
            const request = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            }
            core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)

            const result = await github.rest.pulls.get(request)
            core.info(`GOT ${JSON.stringify(result)}`)
            return result.data
      - uses: actions/checkout@v4
        with:
          ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }}
      - uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCLOUD_REGISTRY_JSON_KEY }}
      - uses: google-github-actions/setup-gcloud@v1
      - name: Use gcloud CLI
        run: "gcloud info"
      - name: Docker auth
        run: gcloud auth configure-docker europe-docker.pkg.dev --quiet
      - name: Set outputs
        run: echo "SHORT_SHA=$(git rev-parse --short=5 HEAD)" >> $GITHUB_ENV
      - name: Pull latest base images
        run: |
          docker pull ${{ env.REGISTRY }}/electric:canary-builder || true
          docker pull ${{ env.REGISTRY }}/electric:canary-runner-base || true
          docker pull ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-builder || true
          docker pull ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-runner-base || true
      - name: Build base images
        env:
          DOCKER_BUILDKIT: "1"
        run: >
          docker build \
            --push \
            --cache-from ${{ env.REGISTRY }}/electric:canary-builder \
            --cache-from ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-builder \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --tag ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-builder \
            --target builder \
            .

          docker build \
            --push \
            --cache-from ${{ env.REGISTRY }}/electric:canary-runner-base \
            --cache-from ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-runner-base \
            --build-arg BUILDKIT_INLINE_CACHE=1 \
            --tag  ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-runner-base \
            --target runner_setup \
            .
      - name: Build actual image
        env:
          DOCKER_BUILDKIT: "1"
        run: >
          docker build \
            --push \
            --cache-from=${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-builder \
            --cache-from=${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-runner-base \
            --tag  ${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-${{ env.SHORT_SHA }} \
            .
      - name: Replication throughput benchmark
        run: |
          curl -X POST 'https://benchmarking.electric-sql.com/api/benchmarks/replication_throughput/runs' \
            -u benchmarking:${{ secrets.BENCHMARKING_API_PASSWORD }} \
            -H 'Content-Type: application/json' \
            --fail-with-body \
            -d '{
              "benchmark_run": {
                "spec_values": {
                  "electric_image": ["${{ env.REGISTRY }}/electric:pr-${{ env.ISSUE_NUMBER }}-${{ env.SHORT_SHA }}"],
                  "postgres_image": ["postgres:17-alpine"],
                  "row_count": [1],
                  "shape_count": [10000,20000,30000,60000],
                  "tx_count": [100],
                  "tx_row_count": [200],
                  "tx_affects_shape": [false],
                  "row_size": [50],
                  "where_clause": ["name ILIKE '"'#{name}%'"'", "name = '"'#{name}'"'"]
                },
                "machine_request": {
                  "vcpu": 4,
                  "mem_gb": 8
                },
                "metadata": {
                  "pr": ${{ env.ISSUE_NUMBER }},
                  "short_version": "pr-${{ env.ISSUE_NUMBER }}-${{ env.SHORT_SHA }}",
                  "callback": {
                    "method": "POST",
                    "headers": [
                      ["Accept","application/vnd.github+json"],
                      ["Authorization","Bearer ${{ secrets.CROSSREPO_PAT }}"],
                      ["X-GitHub-Api-Version","2022-11-28"]
                    ],
                    "url":"https://api.github.com/repos/electric-sql/electric/actions/workflows/leave_benchmark_comment.yml/dispatches",
                    "body": "{\"ref\":\"main\",\"inputs\":{\"pr\":\"${{ env.ISSUE_NUMBER }}\",\"benchmark_info\":#{benchmark_info},\"original_commit\":\"${{ env.SHORT_SHA }}\"}}"
                  }
                }
              }
            }'
